// Zannatul Ferdousi

pipeline GlobalEconomicPipeline {

  // Download the data directly from the provided URL
  ExcelDataFetcher
    -> InterpretWorkbook
    -> SelectDataSheet
    -> ExtractRelevantRange
    -> CleanBondData
    -> InterpretBondData
    -> SaveBondData;

  // Extract and process GDP per Capita data
  ExtractRelevantRange
    -> CleanGdpData
    -> InterpretGdpData
    -> SaveGdpData;

  // Fetch the Excel file from the given URL
  block ExcelDataFetcher oftype HttpExtractor {
    url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
  }

  // Interpret the file as an Excel workbook
  block InterpretWorkbook oftype XLSXInterpreter { }

  // Select the sheet named "Figure S5.1.2"
  block SelectDataSheet oftype SheetPicker {
    sheetName: "Figure S5.1.2";
  }

  // Extract data within the specified range (P2:S45)
  block ExtractRelevantRange oftype CellRangeSelector {
    select: range P2:S45;
  }

  // Remove irrelevant columns for Bond Issuance data
  block CleanBondData oftype ColumnDeleter {
    delete: [column B, column C];
  }

  // Remove irrelevant columns for GDP per Capita data
  block CleanGdpData oftype ColumnDeleter {
    delete: [column B, column D];
  }

  // Interpret Bond Issuance data
  block InterpretBondData oftype TableInterpreter {
    header: false;
    columns: [
      "Country Code" oftype CountryCodeAlpha3,
      "Bond Issuance Share" oftype BondShareDecimal
    ];
  }

  // Interpret GDP per Capita data
  block InterpretGdpData oftype TableInterpreter {
    header: false;
    columns: [
      "Country Code" oftype CountryCodeAlpha3,
      "GDP per Capita" oftype GdpCapitaDecimal
    ];
  }

  // Load Bond Issuance data into SQLite database
  block SaveBondData oftype SQLiteLoader {
    table: "bondIssuance";
    file: "./country-stats.sqlite";
  }

  // Load GDP per Capita data into SQLite database
  block SaveGdpData oftype SQLiteLoader {
    table: "gdpPerCapita";
    file: "./country-stats.sqlite";
  }

  // Define custom value types with constraints
  valuetype BondShareDecimal oftype decimal {
    constraints: [ValidBondShareRange];
  }

  constraint ValidBondShareRange oftype RangeConstraint {
    lowerBound: 0;
    lowerBoundInclusive: true;
    upperBound: 1;
    upperBoundInclusive: true;
  }

  valuetype GdpCapitaDecimal oftype decimal {
    constraints: [PositiveGdpConstraint];
  }

  constraint PositiveGdpConstraint on decimal: value > 0;
}
